import "examples/aws-live/common/aws_control_product.juttle" as control_product;

read aws product='EC2' OR product='EBS' OR product='RDS' OR product='Lambda'
    | (filter aws_product='EC2' AND metric_type='AWS Aggregate' AND aggregate='EC2 Instance Count'
       | view tile -title "Number of EC2 Instances";
       filter aws_product='RDS' AND metric_type='AWS Aggregate' AND aggregate='RDS DB Total Allocated Storage'
       | view tile -title "Total DB Allocated Storage (GB)";
       filter aws_product='EBS' AND metric_type='AWS Aggregate' AND aggregate='EBS Volume Total Iops'
       | view tile -title "Total EBS Volume Capacity (Iops)";
       // EC2: Any instances with failed status checks.
       (filter aws_product='EC2' AND aws_product=control_product.aws_product_in AND (name='StatusCheckFailed_Instance' OR name='StatusCheckFailed_System')
        | filter value=1
        | put oldtime=time
        | sort time by item
        | uniq item
        | put time=oldtime
        | keep time, name, aws_product, item;
        // EBS: Any volumes with status != 'ok'
        filter aws_product='EBS' AND aws_product=control_product.aws_product_in AND name='VolumeStatusErrors'
        | filter value=1 AND status!='ok'
        | put oldtime=time
        | sort time by item
        | uniq item
        | put time=oldtime
        | keep time, name, aws_product, item, status;
        // ELB: Any load balancers where UnHealthyHostCount is > 0
        filter aws_product='ELB' AND aws_product=control_product.aws_product_in AND name='UnHealthyHostCount'
        | filter value>0
        | put oldtime=time
        | sort time by item
        | uniq item
        | put time=oldtime
        | keep time, name, aws_product, item, value;
        // Lambda: any function with errors > 0
        filter aws_product='Lambda' AND control_product.aws_product_in AND name='Errors'
        | filter value>0
        | put oldtime=time
        | sort time by item
        | uniq item
        | put time=oldtime
        | keep time, name, aws_product, item, value;
       )
       | (
          reduce cnt=count()
           | put level=(cnt == 0 ? 'success' : 'error')
           | view tile -title "AWS Number of Problems (${control_product.aws_product_in})" -display.levelField "level";
          view table -title "AWS List of Problem Items (${control_product.aws_product_in})"
         )
       );
